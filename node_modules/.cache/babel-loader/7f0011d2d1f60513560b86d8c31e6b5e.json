{"ast":null,"code":"import _classCallCheck from \"/Users/AlyssaNoelle/Documents/Bloc/refactor/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/AlyssaNoelle/Documents/Bloc/refactor/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/AlyssaNoelle/Documents/Bloc/refactor/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/AlyssaNoelle/Documents/Bloc/refactor/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/AlyssaNoelle/Documents/Bloc/refactor/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/AlyssaNoelle/Documents/Bloc/refactor/src/App.js\";\nimport React, { Component } from 'react'; // Normalizes string as a slug - a string that is safe to use\n// in both URLs and html attributes\n\nimport slugify from 'slugify';\nimport './App.css';\nimport CustomizerOptions from './CustomizerOptions';\nimport CartTotal from './CartTotal';\nimport SummaryTotal from './SummaryTotal'; // This object will allow us to\n// easily convert numbers into US dollar values\n\nvar USCurrencyFormat = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD'\n});\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selected: {\n        'Processor': {\n          name: '17th Generation Intel Core HB (7 Core with donut spare)',\n          cost: 700\n        },\n        'Operating System': {\n          name: 'Ubuntu Linux 16.04',\n          cost: 200\n        },\n        'Video Card': {\n          name: 'Toyota Corolla 1.5v',\n          cost: 1150.98\n        },\n        Display: {\n          name: '15.6\" UHD (3840 x 2160) 60Hz Bright Lights and Knobs',\n          cost: 1500\n        }\n      }\n    };\n\n    _this.updateFeature = function (feature, newValue) {\n      var selected = Object.assign({}, _this.state.selected);\n      selected[feature] = newValue;\n\n      _this.setState({\n        selected: selected\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // //  feature component inside customize 48-76 inside customize\n    //   // feature won't have a render name \n    value: function render() {\n      var _this2 = this;\n\n      //   const features = Object.keys(this.props.features).map((feature, idx) => {\n      //     const featureHash = feature + '-' + idx;\n      //     const options = this.props.features[feature].map(item => {\n      //       const itemHash = slugify(JSON.stringify(item));\n      //       return (\n      //         <div key={itemHash} className=\"feature__item\">\n      //           <input\n      //             type=\"radio\"\n      //             id={itemHash}\n      //             className=\"feature__option\"\n      //             name={slugify(feature)}\n      //             checked={item.name === this.state.selected[feature].name}\n      //             onChange={e => this.updateFeature(feature, item)}\n      //           />\n      //           <label htmlFor={itemHash} className=\"feature__label\">\n      //             {item.name} ({USCurrencyFormat.format(item.cost)})\n      //           </label>\n      //         </div>\n      //       );\n      //     });\n      //     // render this inside customize component \n      //     return (\n      //       <fieldset className=\"feature\" key={featureHash}>\n      //         <legend className=\"feature__name\">\n      //           <h3>{feature}</h3>\n      //         </legend>\n      //         {options}\n      //       </fieldset>\n      //     );\n      //   });\n      // const summary = Object.keys(this.state.selected).map((feature, idx) => {\n      //   const featureHash = feature + '-' + idx;\n      //   const selectedOption = this.state.selected[feature];\n      //   return (\n      //     <div className=\"summary__option\" key={featureHash}>\n      //       <div className=\"summary__option__label\">{feature} </div>\n      //       <div className=\"summary__option__value\">{selectedOption.name}</div>\n      //       <div className=\"summary__option__cost\">\n      //         {USCurrencyFormat.format(selectedOption.cost)}\n      //       </div>\n      //     </div>\n      //   );\n      // });\n      var total = Object.keys(this.state.selected).reduce(function (acc, curr) {\n        return acc + _this2.state.selected[curr].cost;\n      }, 0);\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"ELF Computing | Laptops\")), React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"main__form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Customize your laptop\"), React.createElement(CustomizerOptions, {\n        features: this.props.features,\n        updateFeature: this.updateFeature,\n        selected: this.state.selected,\n        USCurrencyFormat: USCurrencyFormat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(\"section\", {\n        className: \"main__summary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Your cart\"), React.createElement(CartTotal, {\n        selected: this.state.selected,\n        USCurrencyFormat: USCurrencyFormat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(SummaryTotal, {\n        USCurrencyFormat: USCurrencyFormat,\n        selected: this.state.selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/AlyssaNoelle/Documents/Bloc/refactor/src/App.js"],"names":["React","Component","slugify","CustomizerOptions","CartTotal","SummaryTotal","USCurrencyFormat","Intl","NumberFormat","style","currency","App","state","selected","name","cost","Display","updateFeature","feature","newValue","Object","assign","setState","total","keys","reduce","acc","curr","props","features"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;AACA;;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,OAAO,WAAP;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;AACA;;AACA,IAAMC,gBAAgB,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AACtDC,EAAAA,KAAK,EAAE,UAD+C;AAEtDC,EAAAA,QAAQ,EAAE;AAF4C,CAA/B,CAAzB;;IAKMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE;AACR,qBAAa;AACXC,UAAAA,IAAI,EAAE,yDADK;AAEXC,UAAAA,IAAI,EAAE;AAFK,SADL;AAKR,4BAAoB;AAClBD,UAAAA,IAAI,EAAE,oBADY;AAElBC,UAAAA,IAAI,EAAE;AAFY,SALZ;AASR,sBAAc;AACZD,UAAAA,IAAI,EAAE,qBADM;AAEZC,UAAAA,IAAI,EAAE;AAFM,SATN;AAaRC,QAAAA,OAAO,EAAE;AACPF,UAAAA,IAAI,EAAE,sDADC;AAEPC,UAAAA,IAAI,EAAE;AAFC;AAbD;AADJ,K;;UAqBRE,a,GAAgB,UAACC,OAAD,EAAUC,QAAV,EAAuB;AACnC,UAAMN,QAAQ,GAAGO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,MAAKT,KAAL,CAAWC,QAA7B,CAAjB;AACAA,MAAAA,QAAQ,CAACK,OAAD,CAAR,GAAoBC,QAApB;;AACA,YAAKG,QAAL,CAAc;AACZT,QAAAA,QAAQ,EAARA;AADY,OAAd;AAGA,K;;;;;;;AACF;AACA;6BACS;AAAA;;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,UAAMU,KAAK,GAAGH,MAAM,CAACI,IAAP,CAAY,KAAKZ,KAAL,CAAWC,QAAvB,EAAiCY,MAAjC,CACZ,UAACC,GAAD,EAAMC,IAAN;AAAA,eAAeD,GAAG,GAAG,MAAI,CAACd,KAAL,CAAWC,QAAX,CAAoBc,IAApB,EAA0BZ,IAA/C;AAAA,OADY,EAEZ,CAFY,CAAd;AAKA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE,oBAAC,iBAAD;AACE,QAAA,QAAQ,EAAE,KAAKa,KAAL,CAAWC,QADvB;AAEE,QAAA,aAAa,EAAE,KAAKZ,aAFtB;AAGE,QAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWC,QAHvB;AAIE,QAAA,gBAAgB,EAAEP,gBAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAUE;AAAS,QAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,SAAD;AACE,QAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWC,QADvB;AAEE,QAAA,gBAAgB,EAAEP,gBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAKE,oBAAC,YAAD;AACE,QAAA,gBAAgB,EAAEA,gBADpB;AAEE,QAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWC,QAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CAVF,CAJF,CADF;AAiCD;;;;EApHeZ,S;;AAuHlB,eAAeU,GAAf","sourcesContent":["import React, { Component } from 'react';\n\n// Normalizes string as a slug - a string that is safe to use\n// in both URLs and html attributes\nimport slugify from 'slugify';\n\nimport './App.css';\nimport CustomizerOptions from './CustomizerOptions';\nimport CartTotal from './CartTotal';\nimport SummaryTotal from './SummaryTotal';\n\n// This object will allow us to\n// easily convert numbers into US dollar values\nconst USCurrencyFormat = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD'\n});\n\nclass App extends Component {\n  state = {\n    selected: {\n      'Processor': {\n        name: '17th Generation Intel Core HB (7 Core with donut spare)',\n        cost: 700\n      },\n      'Operating System': {\n        name: 'Ubuntu Linux 16.04',\n        cost: 200\n      },\n      'Video Card': {\n        name: 'Toyota Corolla 1.5v',\n        cost: 1150.98\n      },\n      Display: {\n        name: '15.6\" UHD (3840 x 2160) 60Hz Bright Lights and Knobs',\n        cost: 1500\n      }\n    }\n  };\n\n  updateFeature = (feature, newValue) => {\n      const selected = Object.assign({}, this.state.selected);\n      selected[feature] = newValue;\n      this.setState({\n        selected\n     });\n     };\n    // //  feature component inside customize 48-76 inside customize\n    //   // feature won't have a render name \n    render() {\n    //   const features = Object.keys(this.props.features).map((feature, idx) => {\n    //     const featureHash = feature + '-' + idx;\n    //     const options = this.props.features[feature].map(item => {\n    //       const itemHash = slugify(JSON.stringify(item));\n    //       return (\n    //         <div key={itemHash} className=\"feature__item\">\n    //           <input\n    //             type=\"radio\"\n    //             id={itemHash}\n    //             className=\"feature__option\"\n    //             name={slugify(feature)}\n    //             checked={item.name === this.state.selected[feature].name}\n    //             onChange={e => this.updateFeature(feature, item)}\n    //           />\n    //           <label htmlFor={itemHash} className=\"feature__label\">\n    //             {item.name} ({USCurrencyFormat.format(item.cost)})\n    //           </label>\n    //         </div>\n    //       );\n    //     });\n    //     // render this inside customize component \n    //     return (\n    //       <fieldset className=\"feature\" key={featureHash}>\n    //         <legend className=\"feature__name\">\n    //           <h3>{feature}</h3>\n    //         </legend>\n    //         {options}\n    //       </fieldset>\n    //     );\n    //   });\n\n    // const summary = Object.keys(this.state.selected).map((feature, idx) => {\n    //   const featureHash = feature + '-' + idx;\n    //   const selectedOption = this.state.selected[feature];\n\n    //   return (\n    //     <div className=\"summary__option\" key={featureHash}>\n    //       <div className=\"summary__option__label\">{feature} </div>\n    //       <div className=\"summary__option__value\">{selectedOption.name}</div>\n    //       <div className=\"summary__option__cost\">\n    //         {USCurrencyFormat.format(selectedOption.cost)}\n    //       </div>\n    //     </div>\n    //   );\n    // });\n\n    const total = Object.keys(this.state.selected).reduce(\n      (acc, curr) => acc + this.state.selected[curr].cost,\n      0\n    );\n\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>ELF Computing | Laptops</h1>\n        </header>\n        <main>\n          <form className=\"main__form\">\n            <h2>Customize your laptop</h2>\n            <CustomizerOptions \n              features={this.props.features} \n              updateFeature={this.updateFeature} \n              selected={this.state.selected}\n              USCurrencyFormat={USCurrencyFormat}/>\n              \n          </form>\n          <section className=\"main__summary\">\n            <h2>Your cart</h2>\n            <CartTotal \n              selected={this.state.selected}\n              USCurrencyFormat={USCurrencyFormat}/>\n            <SummaryTotal \n              USCurrencyFormat={USCurrencyFormat}\n              selected={this.state.selected}/>\n            {/* <div className=\"summary__total\">\n              <div className=\"summary__total__label\">Total</div>\n              <div className=\"summary__total__value\">\n                {USCurrencyFormat.format(total)}\n              </div>\n            </div> */}\n          </section>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}