{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/AlyssaNoelle/Documents/Bloc/react-refractor/laptop_customizer/src/CustomizerOptions.js\";\n\nimport React from 'react';\n\nvar CustomizerOptions = function CustomizerOptions(props) {\n  var features = Object.keys(_this.props.features).map(function (feature, idx) {\n    var featureHash = feature + '-' + idx;\n\n    var options = _this.props.features[feature].map(function (item) {\n      var itemHash = slugify(JSON.stringify(item));\n      return React.createElement(\"div\", {\n        key: itemHash,\n        className: \"feature__item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        id: itemHash,\n        className: \"feature__option\",\n        name: slugify(feature),\n        checked: item.name === _this.state.selected[feature].name,\n        onChange: function onChange(e) {\n          return _this.updateFeature(feature, item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: itemHash,\n        className: \"feature__label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, item.name, \" (\", USCurrencyFormat.format(item.cost), \")\"));\n    }); // render this inside customize component \n\n\n    return React.createElement(\"fieldset\", {\n      className: \"feature\",\n      key: featureHash,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"feature__name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, feature)), options);\n  });\n};\n\nexport default CustomizerOptions;","map":{"version":3,"sources":["/Users/AlyssaNoelle/Documents/Bloc/react-refractor/laptop_customizer/src/CustomizerOptions.js"],"names":["React","CustomizerOptions","props","features","Object","keys","map","feature","idx","featureHash","options","item","itemHash","slugify","JSON","stringify","name","state","selected","e","updateFeature","USCurrencyFormat","format","cost"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK,EAAI;AAC/B,MAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAI,CAACH,KAAL,CAAWC,QAAvB,EAAiCG,GAAjC,CAAqC,UAACC,OAAD,EAAUC,GAAV,EAAkB;AACpE,QAAMC,WAAW,GAAGF,OAAO,GAAG,GAAV,GAAgBC,GAApC;;AACA,QAAME,OAAO,GAAG,KAAI,CAACR,KAAL,CAAWC,QAAX,CAAoBI,OAApB,EAA6BD,GAA7B,CAAiC,UAAAK,IAAI,EAAI;AACvD,UAAMC,QAAQ,GAAGC,OAAO,CAACC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAD,CAAxB;AACA,aACE;AAAK,QAAA,GAAG,EAAEC,QAAV;AAAoB,QAAA,SAAS,EAAC,eAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,EAAE,EAAEA,QAFN;AAGE,QAAA,SAAS,EAAC,iBAHZ;AAIE,QAAA,IAAI,EAAEC,OAAO,CAACN,OAAD,CAJf;AAKE,QAAA,OAAO,EAAEI,IAAI,CAACK,IAAL,KAAc,KAAI,CAACC,KAAL,CAAWC,QAAX,CAAoBX,OAApB,EAA6BS,IALtD;AAME,QAAA,QAAQ,EAAE,kBAAAG,CAAC;AAAA,iBAAI,KAAI,CAACC,aAAL,CAAmBb,OAAnB,EAA4BI,IAA5B,CAAJ;AAAA,SANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EASE;AAAO,QAAA,OAAO,EAAEC,QAAhB;AAA0B,QAAA,SAAS,EAAC,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,CAACK,IADR,QACgBK,gBAAgB,CAACC,MAAjB,CAAwBX,IAAI,CAACY,IAA7B,CADhB,MATF,CADF;AAeD,KAjBe,CAAhB,CAFoE,CAoBpE;;;AACA,WACE;AAAU,MAAA,SAAS,EAAC,SAApB;AAA8B,MAAA,GAAG,EAAEd,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,OAAL,CADF,CADF,EAIGG,OAJH,CADF;AAQD,GA7Bc,CAAjB;AA8BH,CA/BD;;AAiCA,eAAeT,iBAAf","sourcesContent":["import React from 'react';\n\nconst CustomizerOptions = props => {\n    const features = Object.keys(this.props.features).map((feature, idx) => {\n        const featureHash = feature + '-' + idx;\n        const options = this.props.features[feature].map(item => {\n          const itemHash = slugify(JSON.stringify(item));\n          return (\n            <div key={itemHash} className=\"feature__item\">\n              <input\n                type=\"radio\"\n                id={itemHash}\n                className=\"feature__option\"\n                name={slugify(feature)}\n                checked={item.name === this.state.selected[feature].name}\n                onChange={e => this.updateFeature(feature, item)}\n              />\n              <label htmlFor={itemHash} className=\"feature__label\">\n                {item.name} ({USCurrencyFormat.format(item.cost)})\n              </label>\n            </div>\n          );\n        });\n        // render this inside customize component \n        return (\n          <fieldset className=\"feature\" key={featureHash}>\n            <legend className=\"feature__name\">\n              <h3>{feature}</h3>\n            </legend>\n            {options}\n          </fieldset>\n        );\n      });\n};\n\nexport default CustomizerOptions;\n\n"]},"metadata":{},"sourceType":"module"}