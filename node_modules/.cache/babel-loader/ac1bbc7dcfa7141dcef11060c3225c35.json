{"ast":null,"code":"var _jsxFileName = \"/Users/AlyssaNoelle/Documents/Bloc/react-refractor/laptop_customizer/src/CustomizerOptions.js\";\nimport React from 'react';\nimport slugify from 'slugify';\n\nvar CustomizerOptions = function CustomizerOptions(props) {\n  var features = Object.keys(props.features).map(function (feature, idx) {\n    var featureHash = feature + '-' + idx;\n    var options = props.features[feature].map(function (item) {\n      var itemHash = slugify(JSON.stringify(item));\n      return React.createElement(\"div\", {\n        key: itemHash,\n        className: \"feature__item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        id: itemHash,\n        className: \"feature__option\",\n        name: slugify(feature),\n        checked: item.name === props.selected[feature].name,\n        onChange: function onChange(e) {\n          return props.updateFeature(feature, item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: itemHash,\n        className: \"feature__label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, item.name, \" (\", props.USCurrencyFormat.format(item.cost), \")\"));\n    }); // render this inside customize component \n\n    return React.createElement(\"fieldset\", {\n      className: \"feature\",\n      key: featureHash,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"feature__name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, feature)), options);\n  });\n  return features;\n};\n\nexport default CustomizerOptions;","map":{"version":3,"sources":["/Users/AlyssaNoelle/Documents/Bloc/react-refractor/laptop_customizer/src/CustomizerOptions.js"],"names":["React","slugify","CustomizerOptions","props","features","Object","keys","map","feature","idx","featureHash","options","item","itemHash","JSON","stringify","name","selected","e","updateFeature","USCurrencyFormat","format","cost"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;;AAGA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK,EAAI;AAC/B,MAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACC,QAAlB,EAA4BG,GAA5B,CAAgC,UAACC,OAAD,EAAUC,GAAV,EAAkB;AAC/D,QAAMC,WAAW,GAAGF,OAAO,GAAG,GAAV,GAAgBC,GAApC;AACA,QAAME,OAAO,GAAGR,KAAK,CAACC,QAAN,CAAeI,OAAf,EAAwBD,GAAxB,CAA4B,UAAAK,IAAI,EAAI;AAClD,UAAMC,QAAQ,GAAGZ,OAAO,CAACa,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAD,CAAxB;AACA,aACE;AAAK,QAAA,GAAG,EAAEC,QAAV;AAAoB,QAAA,SAAS,EAAC,eAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,EAAE,EAAEA,QAFN;AAGE,QAAA,SAAS,EAAC,iBAHZ;AAIE,QAAA,IAAI,EAAEZ,OAAO,CAACO,OAAD,CAJf;AAKE,QAAA,OAAO,EAAEI,IAAI,CAACI,IAAL,KAAcb,KAAK,CAACc,QAAN,CAAeT,OAAf,EAAwBQ,IALjD;AAME,QAAA,QAAQ,EAAE,kBAAAE,CAAC;AAAA,iBAAIf,KAAK,CAACgB,aAAN,CAAoBX,OAApB,EAA6BI,IAA7B,CAAJ;AAAA,SANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EASE;AAAO,QAAA,OAAO,EAAEC,QAAhB;AAA0B,QAAA,SAAS,EAAC,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,CAACI,IADR,QACgBb,KAAK,CAACiB,gBAAN,CAAuBC,MAAvB,CAA8BT,IAAI,CAACU,IAAnC,CADhB,MATF,CADF;AAeD,KAjBe,CAAhB,CAF+D,CAoB/D;;AACA,WACE;AAAU,MAAA,SAAS,EAAC,SAApB;AAA8B,MAAA,GAAG,EAAEZ,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,OAAL,CADF,CADF,EAIGG,OAJH,CADF;AAQD,GA7Bc,CAAjB;AA8BJ,SAAOP,QAAP;AACC,CAhCD;;AAkCA,eAAeF,iBAAf","sourcesContent":["import React from 'react';\nimport slugify from 'slugify';\n\n\nconst CustomizerOptions = props => {\n    const features = Object.keys(props.features).map((feature, idx) => {\n        const featureHash = feature + '-' + idx;\n        const options = props.features[feature].map(item => {\n          const itemHash = slugify(JSON.stringify(item));\n          return (\n            <div key={itemHash} className=\"feature__item\">\n              <input\n                type=\"radio\"\n                id={itemHash}\n                className=\"feature__option\"\n                name={slugify(feature)}\n                checked={item.name === props.selected[feature].name}\n                onChange={e => props.updateFeature(feature, item)}\n              />\n              <label htmlFor={itemHash} className=\"feature__label\">\n                {item.name} ({props.USCurrencyFormat.format(item.cost)})\n              </label>\n            </div>\n          );\n        });\n        // render this inside customize component \n        return (\n          <fieldset className=\"feature\" key={featureHash}>\n            <legend className=\"feature__name\">\n              <h3>{feature}</h3>\n            </legend>\n            {options}\n          </fieldset>\n        );\n      });\nreturn features;\n};\n\nexport default CustomizerOptions;\n\n"]},"metadata":{},"sourceType":"module"}